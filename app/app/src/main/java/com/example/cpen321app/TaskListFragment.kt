import android.app.AlertDialog
import android.os.Bundle
import android.view.LayoutInflater
import android.view.MenuItem
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.PopupMenu
import android.widget.PopupWindow
import android.widget.Toast
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.example.cpen321app.GeoTask
import com.example.cpen321app.MainActivity
import com.example.cpen321app.R
import com.example.cpen321app.Task
import com.example.cpen321app.TaskAdapter
import com.example.cpen321app.TaskViewModel

// Generated by Copilot
class TaskListFragment : Fragment(), TaskAdapter.OnItemLongClickListener {

    private lateinit var recyclerView: RecyclerView
    private lateinit var taskAdapter: TaskAdapter
    private lateinit var taskViewModel: TaskViewModel

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        val view = inflater.inflate(R.layout.fragment_task_list, container, false)

        // Obtain the ViewModel
        taskViewModel = (activity?.application as GeoTask).taskViewModel

        // Initialize RecyclerView
        recyclerView = view.findViewById(R.id.recyclerView)
        recyclerView.layoutManager = LinearLayoutManager(activity)
        taskAdapter = TaskAdapter(taskViewModel.taskList.value ?: mutableListOf(), this, requireContext())
        recyclerView.adapter = taskAdapter

        // Observe changes in the task list
        taskViewModel.taskList.observe(viewLifecycleOwner, { tasks ->
            taskAdapter.notifyDataSetChanged()
        })

        taskViewModel.logAllTasks()

        return view
    }

    override fun onItemLongClick(task: Task): Boolean {

        // Inflate the popup menu layout
        val popupView = LayoutInflater.from(requireContext()).inflate(R.layout.popup_menu, null)

        // Create the PopupWindow
        val popupWindow = PopupWindow(popupView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, true)

        // Set click listeners for the buttons
        val updateButton: Button = popupView.findViewById(R.id.update_button)
        val deleteButton: Button = popupView.findViewById(R.id.delete_button)

        updateButton.setOnClickListener {
            // Handle the update action
            Toast.makeText(requireContext(), "Update action", Toast.LENGTH_SHORT).show()
            popupWindow.dismiss()
        }

        deleteButton.setOnClickListener {
            // Handle the delete action
            taskViewModel.deleteTask(task)
            Toast.makeText(requireContext(), "Task deleted", Toast.LENGTH_SHORT).show()
            popupWindow.dismiss()
        }

        // Show the PopupWindow
        popupWindow.showAtLocation(view, android.view.Gravity.BOTTOM, 0, 0)

        taskViewModel.logAllTasks()

        return true
    }
}