package com.example.cpen321app

import android.app.Application
import android.util.Log
import androidx.lifecycle.AndroidViewModel
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel

// Generated by Copilot, aside from the backend code
class TaskViewModel(application: Application) : AndroidViewModel(application) {
    private val _taskList = MutableLiveData<MutableList<Task>>()
    val taskList: LiveData<MutableList<Task>> get() = _taskList

    companion object {
        private const val TAG = "TaskViewModel"
    }

    init {
        _taskList.value = mutableListOf()
    }

    fun addTask(task: Task) {

        // Add task to backend

        _taskList.value?.add(task)
        _taskList.notifyObservers()
    }

    fun deleteTask(task: Task) {

        // Remove task from backend

        _taskList.value?.remove(task)
        _taskList.notifyObservers()
    }

    // My code
    fun updateTaskList() {

        // Update task list from backend

    }

    fun updateTaskListTesting() {
        val cadTire = Task("1", "Visit Canadian Tire", "15/03/2025", 4, 49.2099188, -123.1075474, 1, "Pick up new summer tires")
        val groceries = Task("2", "Grocery Shopping", "28/02/2025", 4, 49.2085271,-123.0996029, 1, "Buy Groceries")
        val midterm = Task("3", "CPEN 321 Midterm Pick Up", "28/02/2025", 4, 49.2624275, -123.2502343, 1, "Pick up my midterm 1 from Professor's office")

        addTask(cadTire)
        addTask(groceries)
        addTask(midterm)
    }

    fun logAllTasks() {
        for (item in _taskList.value!!) {
            Log.d(TAG, item.name)
        }
    }

    private fun <T> MutableLiveData<T>.notifyObservers() {
        this.value = this.value
    }

}